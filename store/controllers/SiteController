<?php

    namespace app\controllers;
    use app\core\Application;
    use app\core\Controller;
    use app\core\Request;
    /* use app\core\Request as CoreRequest;
    use thecodeholic\phpmvc\Application;
    use thecodeholic\phpmvc\Controller;
    use thecodeholic\phpmvc\middlewares\AuthMiddleware;
    use thecodeholic\phpmvc\Request;
    use thecodeholic\phpmvc\Response;
    use app\models\LoginForm;
    use app\models\User;  */


    /* Class SiteController 
    @package app\controllers
    
    /* class SiteController extends AboutController
    {
        public function __construct()
        {
            $this->registerMiddleware(new AuthMiddleware(['profile']));
        }
        public function home()
        {
            return $this->render('home', [
                'name' => 'TheCodeholic'
            ]);
        }
        public function login(Request $request)
        {
            echo '<pre>';
            var_dump($request->getBody(), $request->getRouteParam('id'));
            echo '</pre>';
            $loginForm = new LoginForm();
            if ($request->method() === 'post') {
                $loginForm->loadData($request->getBody());
                if ($loginForm->validate() && $loginForm->login()) {
                    Application::$app->response->redirect('/');
                    return;
                }
            }
            $this->setLayout('auth');
            return $this->render('login', [
                'model' => $loginForm
            ]);
        }
        public function register(Request $request)
        {
            $registerModel = new User();
                if($request->method()==='post'){
                    $registerModel->loadData($request->getBody());
                    if($registerModel->validade() && $registerModel->save()){
                        Applicattion::$app->session->setFlash('success', 'Register Sucessfully');
                        Applicattion::$app->response->redirect('/');
                        return 'Show success page';
                    }
                }
                $this->setLayout('auth');
                return $this->render('register', [
                    'model' => $registerModel
                ]);
        }
        public function logout(Request $request, Response $response)
        {
            Application::$app->logout();
            $response->redirect('/');
        }

        public function contact()
        {
            return $this->render('contact');
        }

        public function profile()
        {
            return $this->render('profile');
        }

        public function profileWithId(Request $request)
        {
            echo '<pre>';
            var_dump($request->getBody());
            echo '</pre>';
        }
    } */
    class SiteController extends Controller
    {
        public function home()
        {
            $params=[
                'name' =>"stigy"
            ];
            return $this>render('home', $params);
        }
        public function contact()
        {
            return $this->render('contact');
        }

        public function handleContact(Request $request)
        {
            $body->request->getBody();
            return 'handling submitted data';
        }
    }
?>
